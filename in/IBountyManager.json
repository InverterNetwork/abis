{
  "abi": [
    {
      "inputs": [],
      "name": "Module__BountyManager__AlreadyClaimed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__BountyManager__BountyLocked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__BountyManager__ClaimExceedsGivenPayoutAmounts",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__BountyManager__ContributorsChanged",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__BountyManager__InvalidBountyId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__BountyManager__InvalidClaimId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__BountyManager__InvalidContributorAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__BountyManager__InvalidContributorAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__BountyManager__InvalidContributorsLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__BountyManager__InvalidPayoutAmounts",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__BountyManager__OnlyClaimContributor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__ERC20PaymentClient__ArrayLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__ERC20PaymentClient__CallerNotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__ERC20PaymentClient__InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__ERC20PaymentClient__InvalidDueTo",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__ERC20PaymentClient__InvalidRecipient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Module__ERC20PaymentClient__TokenTransferFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bountyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimumPayoutAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maximumPayoutAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "details",
          "type": "bytes"
        }
      ],
      "name": "BountyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bountyId",
          "type": "uint256"
        }
      ],
      "name": "BountyLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bountyId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "details",
          "type": "bytes"
        }
      ],
      "name": "BountyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bountyId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "claimAmount",
              "type": "uint256"
            }
          ],
          "indexed": true,
          "internalType": "struct IBountyManager.Contributor[]",
          "name": "contributors",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "details",
          "type": "bytes"
        }
      ],
      "name": "ClaimAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "claimAmount",
              "type": "uint256"
            }
          ],
          "indexed": true,
          "internalType": "struct IBountyManager.Contributor[]",
          "name": "contributors",
          "type": "tuple[]"
        }
      ],
      "name": "ClaimContributorsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "details",
          "type": "bytes"
        }
      ],
      "name": "ClaimDetailsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "ClaimVerified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentOrderAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimumPayoutAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maximumPayoutAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "details",
          "type": "bytes"
        }
      ],
      "name": "addBounty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bountyId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "claimAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBountyManager.Contributor[]",
          "name": "contributors",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "details",
          "type": "bytes"
        }
      ],
      "name": "addClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "amountPaid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectPaymentOrders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dueTo",
              "type": "uint256"
            }
          ],
          "internalType": "struct IERC20PaymentClient.PaymentOrder[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bountyId",
          "type": "uint256"
        }
      ],
      "name": "getBountyInformation",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "minimumPayoutAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumPayoutAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "details",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "locked",
              "type": "bool"
            }
          ],
          "internalType": "struct IBountyManager.Bounty",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "getClaimInformation",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "bountyId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "claimAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IBountyManager.Contributor[]",
              "name": "contributors",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "details",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "claimed",
              "type": "bool"
            }
          ],
          "internalType": "struct IBountyManager.Claim",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bountyId",
          "type": "uint256"
        }
      ],
      "name": "isExistingBountyId",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "isExistingClaimId",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "listBountyIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "listClaimIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contributorAddrs",
          "type": "address"
        }
      ],
      "name": "listClaimIdsForContributorAddress",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bountyId",
          "type": "uint256"
        }
      ],
      "name": "lockBounty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "outstandingTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentOrders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dueTo",
              "type": "uint256"
            }
          ],
          "internalType": "struct IERC20PaymentClient.PaymentOrder[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bountyId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "details",
          "type": "bytes"
        }
      ],
      "name": "updateBounty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "claimAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBountyManager.Contributor[]",
          "name": "contributors",
          "type": "tuple[]"
        }
      ],
      "name": "updateClaimContributors",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "details",
          "type": "bytes"
        }
      ],
      "name": "updateClaimDetails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "claimAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBountyManager.Contributor[]",
          "name": "contributors",
          "type": "tuple[]"
        }
      ],
      "name": "verifyClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addBounty(uint256,uint256,bytes)": "bd769f79",
    "addClaim(uint256,(address,uint256)[],bytes)": "0d97d72c",
    "amountPaid(uint256)": "13e64063",
    "collectPaymentOrders()": "c0231ff6",
    "getBountyInformation(uint256)": "31be580e",
    "getClaimInformation(uint256)": "cb05296f",
    "isExistingBountyId(uint256)": "be5a5745",
    "isExistingClaimId(uint256)": "e2114c8c",
    "listBountyIds()": "b5e8bc45",
    "listClaimIds()": "3cd6b5d1",
    "listClaimIdsForContributorAddress(address)": "9c16f525",
    "lockBounty(uint256)": "fa4dbd03",
    "outstandingTokenAmount()": "a44a6bb2",
    "paymentOrders()": "75fa0b76",
    "updateBounty(uint256,bytes)": "31de0bdb",
    "updateClaimContributors(uint256,(address,uint256)[])": "5beaeb8c",
    "updateClaimDetails(uint256,bytes)": "2d54a71c",
    "verifyClaim(uint256,(address,uint256)[])": "bf1f9656"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Module__BountyManager__AlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__BountyManager__BountyLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__BountyManager__ClaimExceedsGivenPayoutAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__BountyManager__ContributorsChanged\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__BountyManager__InvalidBountyId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__BountyManager__InvalidClaimId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__BountyManager__InvalidContributorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__BountyManager__InvalidContributorAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__BountyManager__InvalidContributorsLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__BountyManager__InvalidPayoutAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__BountyManager__OnlyClaimContributor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClient__ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClient__CallerNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClient__InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClient__InvalidDueTo\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClient__InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClient__TokenTransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bountyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumPayoutAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maximumPayoutAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"details\",\"type\":\"bytes\"}],\"name\":\"BountyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bountyId\",\"type\":\"uint256\"}],\"name\":\"BountyLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bountyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"details\",\"type\":\"bytes\"}],\"name\":\"BountyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bountyId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"indexed\":true,\"internalType\":\"struct IBountyManager.Contributor[]\",\"name\":\"contributors\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"details\",\"type\":\"bytes\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"indexed\":true,\"internalType\":\"struct IBountyManager.Contributor[]\",\"name\":\"contributors\",\"type\":\"tuple[]\"}],\"name\":\"ClaimContributorsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"details\",\"type\":\"bytes\"}],\"name\":\"ClaimDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"}],\"name\":\"ClaimVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentOrderAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumPayoutAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumPayoutAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"details\",\"type\":\"bytes\"}],\"name\":\"addBounty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bountyId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IBountyManager.Contributor[]\",\"name\":\"contributors\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"details\",\"type\":\"bytes\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"amountPaid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectPaymentOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dueTo\",\"type\":\"uint256\"}],\"internalType\":\"struct IERC20PaymentClient.PaymentOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bountyId\",\"type\":\"uint256\"}],\"name\":\"getBountyInformation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minimumPayoutAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumPayoutAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"details\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"internalType\":\"struct IBountyManager.Bounty\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"}],\"name\":\"getClaimInformation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"bountyId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IBountyManager.Contributor[]\",\"name\":\"contributors\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"details\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"}],\"internalType\":\"struct IBountyManager.Claim\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bountyId\",\"type\":\"uint256\"}],\"name\":\"isExistingBountyId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"}],\"name\":\"isExistingClaimId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listBountyIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listClaimIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contributorAddrs\",\"type\":\"address\"}],\"name\":\"listClaimIdsForContributorAddress\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bountyId\",\"type\":\"uint256\"}],\"name\":\"lockBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"outstandingTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dueTo\",\"type\":\"uint256\"}],\"internalType\":\"struct IERC20PaymentClient.PaymentOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bountyId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"details\",\"type\":\"bytes\"}],\"name\":\"updateBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IBountyManager.Contributor[]\",\"name\":\"contributors\",\"type\":\"tuple[]\"}],\"name\":\"updateClaimContributors\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"details\",\"type\":\"bytes\"}],\"name\":\"updateClaimDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IBountyManager.Contributor[]\",\"name\":\"contributors\",\"type\":\"tuple[]\"}],\"name\":\"verifyClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:moduletype\":\"logicModule\",\"custom:version\":\"1.0\",\"events\":{\"BountyAdded(uint256,uint256,uint256,bytes)\":{\"params\":{\"bountyId\":\"The id of the newly added Bounty.\",\"details\":\"The Bounty's details.\",\"maximumPayoutAmount\":\"The maximum amount of tokens the Bounty will pay out upon being claimed\",\"minimumPayoutAmount\":\"The minimum amount of tokens the Bounty will pay out upon being claimed\"}},\"BountyLocked(uint256)\":{\"params\":{\"bountyId\":\"The id of the locked Bounty.\"}},\"BountyUpdated(uint256,bytes)\":{\"params\":{\"bountyId\":\"The id of the updated Bounty.\",\"details\":\"The Bounty's details.\"}},\"ClaimAdded(uint256,uint256,(address,uint256)[],bytes)\":{\"params\":{\"bountyId\":\"The id of the Bounty that got claimed.\",\"claimId\":\"The id of the newly added Claim.\",\"contributors\":\"The contributor information for the Claim.\",\"details\":\"The Claim's details.\"}},\"ClaimContributorsUpdated(uint256,(address,uint256)[])\":{\"params\":{\"claimId\":\"The id of the Claim that got updated.\",\"contributors\":\"The contributor information for the Claim.\"}},\"ClaimDetailsUpdated(uint256,bytes)\":{\"params\":{\"claimId\":\"The id of the Claim that got updated.\",\"details\":\"The Claim's details.\"}},\"ClaimVerified(uint256)\":{\"params\":{\"claimId\":\"The id of the Claim that got verified.\"}},\"PaymentOrderAdded(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens the payment consists of.\",\"recipient\":\"The address that will receive the payment.\"}}},\"kind\":\"dev\",\"methods\":{\"addBounty(uint256,uint256,bytes)\":{\"custom:tags\":\"minimumPayoutAmount:decimal maximumPayoutAmount:decimal details:any(string)\",\"details\":\"Reverts if an argument invalid.\",\"params\":{\"details\":\"The Bounty's details.\",\"maximumPayoutAmount\":\"The maximum amount of tokens the Bounty will pay out upon being claimed\",\"minimumPayoutAmount\":\"The minimum amount of tokens the Bounty will pay out upon being claimed\"},\"returns\":{\"_0\":\"bountyId The newly added Bounty's id.\"}},\"addClaim(uint256,(address,uint256)[],bytes)\":{\"custom:tags\":\"claimAmount:decimal details:any(string)\",\"details\":\"Reverts if an argument invalid.\",\"params\":{\"contributors\":\"The contributor information for the Claim\",\"details\":\"The Claim's details.\"},\"returns\":{\"_0\":\"claimId The newly added Claim's id.\"}},\"amountPaid(uint256)\":{\"details\":\"Payment Client will reduce the total amount of tokens it will stock up by the given amount This has to be called by a paymentProcessor\",\"params\":{\"amount\":\"amount of tokens that have been paid out\"}},\"collectPaymentOrders()\":{\"details\":\"Marks the orders as completed for the client.      The responsibility to fulfill the orders are now in the caller's      hand!\",\"returns\":{\"_0\":\"paymentOrders list of payment orders\",\"_1\":\"totalTokenAmount total amount of token to pay\"}},\"getBountyInformation(uint256)\":{\"custom:tags\":\"minimumPayoutAmount:decimal maximumPayoutAmount:decimal details:any(string)\",\"params\":{\"bountyId\":\"The id of the Bounty to return.\"},\"returns\":{\"_0\":\"bounty Bounty with id `id`.\"}},\"getClaimInformation(uint256)\":{\"custom:tags\":\"claimAmount:decimal details:any(string)\",\"params\":{\"claimId\":\"The id of the Claim to return.\"},\"returns\":{\"_0\":\"claim Claim with id `id`.\"}},\"isExistingBountyId(uint256)\":{\"params\":{\"bountyId\":\"The id of the Bounty to test.\"},\"returns\":{\"_0\":\"isExistingBountyId True if Claim with id `id` exists, false otherwise.\"}},\"isExistingClaimId(uint256)\":{\"params\":{\"claimId\":\"The id of the Bounty to test.\"},\"returns\":{\"_0\":\"isExistingClaimId True if Claim with id `id` exists, false otherwise.\"}},\"listBountyIds()\":{\"details\":\"List is in ascending order.\",\"returns\":{\"_0\":\"bountyIds List of Bounty ids.\"}},\"listClaimIds()\":{\"details\":\"List is in ascending order.\",\"returns\":{\"_0\":\"claimIds List of Claim ids.\"}},\"listClaimIdsForContributorAddress(address)\":{\"details\":\"List is in ascending order.Returns an empty .\",\"params\":{\"contributorAddrs\":\"claim ids are filtered by the contributor address\"},\"returns\":{\"_0\":\"contributorClaimIds List of Claim ids.\"}},\"lockBounty(uint256)\":{\"details\":\"Only callable by authorized addresses.Reverts if id invalid.\",\"params\":{\"bountyId\":\"The id of the Bounty that will be locked.\"}},\"updateBounty(uint256,bytes)\":{\"custom:tags\":\"details:any(string)\",\"details\":\"Reverts if an argument invalid.\",\"params\":{\"bountyId\":\"The id of the Bounty that will be updated.\",\"details\":\"The Bounty's details.\"}},\"updateClaimContributors(uint256,(address,uint256)[])\":{\"custom:tags\":\"claimAmount:decimal\",\"details\":\"Reverts if an argument invalid.\",\"params\":{\"claimId\":\"The id of the Claim that will be updated.\",\"contributors\":\"The contributor information for the Claim.\"}},\"updateClaimDetails(uint256,bytes)\":{\"custom:tags\":\"details:any(string)\",\"params\":{\"claimId\":\"The id of the Claim that will be updated.\",\"details\":\"The Claim's details.\"}},\"verifyClaim(uint256,(address,uint256)[])\":{\"custom:tags\":\"claimAmount:decimal\",\"details\":\"Only callable by authorized addresses.Reverts if id invalid.contributors should be copied out of the given Claim. The parameter is used to prevent front running.\",\"params\":{\"claimId\":\"The id of the Claim that wants to claim the Bounty.\",\"contributors\":\"The contributor information for the Claim.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"Module__BountyManager__AlreadyClaimed()\":[{\"notice\":\"Given Claim id got already claimed\"}],\"Module__BountyManager__BountyLocked()\":[{\"notice\":\"Given Bounty id is Locked\"}],\"Module__BountyManager__ClaimExceedsGivenPayoutAmounts()\":[{\"notice\":\"Given total claims of contributors exceed or are below the given payout amounts of the bounty\"}],\"Module__BountyManager__ContributorsChanged()\":[{\"notice\":\"The given Contributors are not the same as in the claim. This might be connected to a tried front run of the given transaction.\"}],\"Module__BountyManager__InvalidBountyId()\":[{\"notice\":\"Given Bounty id is not existing\"}],\"Module__BountyManager__InvalidClaimId()\":[{\"notice\":\"Given Claim id is not existing\"}],\"Module__BountyManager__InvalidContributorAddress()\":[{\"notice\":\"Given Contributor address is invalid\"}],\"Module__BountyManager__InvalidContributorAmount()\":[{\"notice\":\"Given claim Amount for contributor is zero\"}],\"Module__BountyManager__InvalidContributorsLength()\":[{\"notice\":\"Given Contributors list is empty\"}],\"Module__BountyManager__InvalidPayoutAmounts()\":[{\"notice\":\"Given payoutAmounts are either zero or maximumPayoutAmount is smaller than minimumPayoutAmount\"}],\"Module__BountyManager__OnlyClaimContributor()\":[{\"notice\":\"Access only to addresses that are listed as contributors in the according claim\"}],\"Module__ERC20PaymentClient__ArrayLengthMismatch()\":[{\"notice\":\"Given arrays' length mismatch.\"}],\"Module__ERC20PaymentClient__CallerNotAuthorized()\":[{\"notice\":\"Function is only callable by authorized address.\"}],\"Module__ERC20PaymentClient__InvalidAmount()\":[{\"notice\":\"Given amount invalid.\"}],\"Module__ERC20PaymentClient__InvalidDueTo()\":[{\"notice\":\"Given dueTo invalid.\"}],\"Module__ERC20PaymentClient__InvalidRecipient()\":[{\"notice\":\"Given recipient invalid.\"}],\"Module__ERC20PaymentClient__TokenTransferFailed()\":[{\"notice\":\"ERC20 token transfer failed.\"}]},\"events\":{\"BountyAdded(uint256,uint256,uint256,bytes)\":{\"notice\":\"Event emitted when a new Bounty is added.\"},\"BountyLocked(uint256)\":{\"notice\":\"Event emitted when a Bounty gets locked.\"},\"BountyUpdated(uint256,bytes)\":{\"notice\":\"Event emitted when a Bounty got updated.\"},\"ClaimAdded(uint256,uint256,(address,uint256)[],bytes)\":{\"notice\":\"Event emitted when a new Claim is added.\"},\"ClaimContributorsUpdated(uint256,(address,uint256)[])\":{\"notice\":\"Event emitted when Claim Contributors got updated.\"},\"ClaimDetailsUpdated(uint256,bytes)\":{\"notice\":\"Event emitted when Claim Details got updated.\"},\"ClaimVerified(uint256)\":{\"notice\":\"Event emitted when a Claim is verified.\"},\"PaymentOrderAdded(address,uint256)\":{\"notice\":\"Added a payment order.\"}},\"kind\":\"user\",\"methods\":{\"addBounty(uint256,uint256,bytes)\":{\"notice\":\"Adds a new Bounty.\"},\"addClaim(uint256,(address,uint256)[],bytes)\":{\"notice\":\"Adds a new Claim.\"},\"amountPaid(uint256)\":{\"notice\":\"Notifies the PaymentClient, that tokens have been paid out accordingly\"},\"collectPaymentOrders()\":{\"notice\":\"Collects outstanding payment orders.\"},\"getBountyInformation(uint256)\":{\"notice\":\"Returns the Bounty instance with id `id`.\"},\"getClaimInformation(uint256)\":{\"notice\":\"Returns the Claim instance with id `id`.\"},\"isExistingBountyId(uint256)\":{\"notice\":\"Returns whether Bounty with id `id` exists.\"},\"isExistingClaimId(uint256)\":{\"notice\":\"Returns whether Claim with id `id` exists.\"},\"listBountyIds()\":{\"notice\":\"Returns total list of Bounty ids.\"},\"listClaimIds()\":{\"notice\":\"Returns total list of Claim ids.\"},\"listClaimIdsForContributorAddress(address)\":{\"notice\":\"Returns a list of Claim ids in which contributor Address is used.\"},\"lockBounty(uint256)\":{\"notice\":\"Locks the Bounty so it cant be claimed.\"},\"outstandingTokenAmount()\":{\"notice\":\"Returns the total outstanding token payment amount.\"},\"paymentOrders()\":{\"notice\":\"Returns the list of outstanding payment orders.\"},\"updateBounty(uint256,bytes)\":{\"notice\":\"Updates a Bounty's informations.\"},\"updateClaimContributors(uint256,(address,uint256)[])\":{\"notice\":\"Updates a Claim's contributor informations.\"},\"updateClaimDetails(uint256,bytes)\":{\"notice\":\"Updates a Claim Details.\"},\"verifyClaim(uint256,(address,uint256)[])\":{\"notice\":\"Completes a Bounty by verifying a claim.\"}},\"notice\":\"A module for managing bounties\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/logicModule/IBountyManager.sol\":\"IBountyManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[\":@ds/=lib/multicall/lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/multicall/lib/forge-std/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":multicall/=lib/multicall/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"src/modules/logicModule/IBountyManager.sol\":{\"keccak256\":\"0xccd2d66d4dfd5ffdd71a7f4207bdb4b77fbf9f9244ae74cb8c13d2a8d1afae45\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://92d1780eba91f2eba85cd6d7e05ef635b691bc0fe82b3a92a463f7aa925b847a\",\"dweb:/ipfs/QmX13JUMdwUaVoNgPnCyVPH1ZFy6rh5brHPoj2MVbtxakC\"]},\"src/modules/logicModule/paymentClient/IERC20PaymentClient.sol\":{\"keccak256\":\"0x6fd937b4c982db398caf408c94782cbfba9af8861404f7473b07439f526a49a2\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://93c753a744ddef29e99c9775f19a87251aad644b8809c0a7d9d4070e682a708f\",\"dweb:/ipfs/QmTgTC8XV3BSy7yED9HGUDDfQpCYENPTn2d16GTkSRsk7G\"]},\"src/modules/paymentProcessor/IPaymentProcessor.sol\":{\"keccak256\":\"0x03db27327e16d429f3e906b604de641e126313e07704fddbd2bc39035b0b23a1\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://b620ed08ea5973c00e897f5e2d8cb9dfe2851f80cf37d7e4e0a7963091f6cdba\",\"dweb:/ipfs/Qmcw1c1qrd7KpHWRSiSLyiDkKx4x8cRZfvtcYU962DHLFH\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "Module__BountyManager__AlreadyClaimed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__BountyManager__BountyLocked"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__BountyManager__ClaimExceedsGivenPayoutAmounts"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__BountyManager__ContributorsChanged"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__BountyManager__InvalidBountyId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__BountyManager__InvalidClaimId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__BountyManager__InvalidContributorAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__BountyManager__InvalidContributorAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__BountyManager__InvalidContributorsLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__BountyManager__InvalidPayoutAmounts"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__BountyManager__OnlyClaimContributor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClient__ArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClient__CallerNotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClient__InvalidAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClient__InvalidDueTo"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClient__InvalidRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClient__TokenTransferFailed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bountyId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "minimumPayoutAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "maximumPayoutAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "details",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BountyAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bountyId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BountyLocked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bountyId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "details",
              "type": "bytes",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BountyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "bountyId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IBountyManager.Contributor[]",
              "name": "contributors",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "claimAmount",
                  "type": "uint256"
                }
              ],
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "details",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IBountyManager.Contributor[]",
              "name": "contributors",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "claimAmount",
                  "type": "uint256"
                }
              ],
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ClaimContributorsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "details",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimDetailsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ClaimVerified",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PaymentOrderAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minimumPayoutAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumPayoutAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "details",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addBounty",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bountyId",
              "type": "uint256"
            },
            {
              "internalType": "struct IBountyManager.Contributor[]",
              "name": "contributors",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "claimAmount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "details",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "amountPaid"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectPaymentOrders",
          "outputs": [
            {
              "internalType": "struct IERC20PaymentClient.PaymentOrder[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "createdAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dueTo",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bountyId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBountyInformation",
          "outputs": [
            {
              "internalType": "struct IBountyManager.Bounty",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "minimumPayoutAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumPayoutAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "details",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "locked",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimInformation",
          "outputs": [
            {
              "internalType": "struct IBountyManager.Claim",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "bountyId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IBountyManager.Contributor[]",
                  "name": "contributors",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "addr",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "claimAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "details",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "claimed",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bountyId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isExistingBountyId",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isExistingClaimId",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "listBountyIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "listClaimIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contributorAddrs",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "listClaimIdsForContributorAddress",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bountyId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockBounty"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "outstandingTokenAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paymentOrders",
          "outputs": [
            {
              "internalType": "struct IERC20PaymentClient.PaymentOrder[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "createdAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dueTo",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "bountyId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "details",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBounty"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimId",
              "type": "uint256"
            },
            {
              "internalType": "struct IBountyManager.Contributor[]",
              "name": "contributors",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "claimAmount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateClaimContributors"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "details",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateClaimDetails"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimId",
              "type": "uint256"
            },
            {
              "internalType": "struct IBountyManager.Contributor[]",
              "name": "contributors",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "claimAmount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyClaim"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addBounty(uint256,uint256,bytes)": {
            "custom:tags": "minimumPayoutAmount:decimal maximumPayoutAmount:decimal details:any(string)",
            "details": "Reverts if an argument invalid.",
            "params": {
              "details": "The Bounty's details.",
              "maximumPayoutAmount": "The maximum amount of tokens the Bounty will pay out upon being claimed",
              "minimumPayoutAmount": "The minimum amount of tokens the Bounty will pay out upon being claimed"
            },
            "returns": {
              "_0": "bountyId The newly added Bounty's id."
            }
          },
          "addClaim(uint256,(address,uint256)[],bytes)": {
            "custom:tags": "claimAmount:decimal details:any(string)",
            "details": "Reverts if an argument invalid.",
            "params": {
              "contributors": "The contributor information for the Claim",
              "details": "The Claim's details."
            },
            "returns": {
              "_0": "claimId The newly added Claim's id."
            }
          },
          "amountPaid(uint256)": {
            "details": "Payment Client will reduce the total amount of tokens it will stock up by the given amount This has to be called by a paymentProcessor",
            "params": {
              "amount": "amount of tokens that have been paid out"
            }
          },
          "collectPaymentOrders()": {
            "details": "Marks the orders as completed for the client.      The responsibility to fulfill the orders are now in the caller's      hand!",
            "returns": {
              "_0": "paymentOrders list of payment orders",
              "_1": "totalTokenAmount total amount of token to pay"
            }
          },
          "getBountyInformation(uint256)": {
            "custom:tags": "minimumPayoutAmount:decimal maximumPayoutAmount:decimal details:any(string)",
            "params": {
              "bountyId": "The id of the Bounty to return."
            },
            "returns": {
              "_0": "bounty Bounty with id `id`."
            }
          },
          "getClaimInformation(uint256)": {
            "custom:tags": "claimAmount:decimal details:any(string)",
            "params": {
              "claimId": "The id of the Claim to return."
            },
            "returns": {
              "_0": "claim Claim with id `id`."
            }
          },
          "isExistingBountyId(uint256)": {
            "params": {
              "bountyId": "The id of the Bounty to test."
            },
            "returns": {
              "_0": "isExistingBountyId True if Claim with id `id` exists, false otherwise."
            }
          },
          "isExistingClaimId(uint256)": {
            "params": {
              "claimId": "The id of the Bounty to test."
            },
            "returns": {
              "_0": "isExistingClaimId True if Claim with id `id` exists, false otherwise."
            }
          },
          "listBountyIds()": {
            "details": "List is in ascending order.",
            "returns": {
              "_0": "bountyIds List of Bounty ids."
            }
          },
          "listClaimIds()": {
            "details": "List is in ascending order.",
            "returns": {
              "_0": "claimIds List of Claim ids."
            }
          },
          "listClaimIdsForContributorAddress(address)": {
            "details": "List is in ascending order.Returns an empty .",
            "params": {
              "contributorAddrs": "claim ids are filtered by the contributor address"
            },
            "returns": {
              "_0": "contributorClaimIds List of Claim ids."
            }
          },
          "lockBounty(uint256)": {
            "details": "Only callable by authorized addresses.Reverts if id invalid.",
            "params": {
              "bountyId": "The id of the Bounty that will be locked."
            }
          },
          "updateBounty(uint256,bytes)": {
            "custom:tags": "details:any(string)",
            "details": "Reverts if an argument invalid.",
            "params": {
              "bountyId": "The id of the Bounty that will be updated.",
              "details": "The Bounty's details."
            }
          },
          "updateClaimContributors(uint256,(address,uint256)[])": {
            "custom:tags": "claimAmount:decimal",
            "details": "Reverts if an argument invalid.",
            "params": {
              "claimId": "The id of the Claim that will be updated.",
              "contributors": "The contributor information for the Claim."
            }
          },
          "updateClaimDetails(uint256,bytes)": {
            "custom:tags": "details:any(string)",
            "params": {
              "claimId": "The id of the Claim that will be updated.",
              "details": "The Claim's details."
            }
          },
          "verifyClaim(uint256,(address,uint256)[])": {
            "custom:tags": "claimAmount:decimal",
            "details": "Only callable by authorized addresses.Reverts if id invalid.contributors should be copied out of the given Claim. The parameter is used to prevent front running.",
            "params": {
              "claimId": "The id of the Claim that wants to claim the Bounty.",
              "contributors": "The contributor information for the Claim."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addBounty(uint256,uint256,bytes)": {
            "notice": "Adds a new Bounty."
          },
          "addClaim(uint256,(address,uint256)[],bytes)": {
            "notice": "Adds a new Claim."
          },
          "amountPaid(uint256)": {
            "notice": "Notifies the PaymentClient, that tokens have been paid out accordingly"
          },
          "collectPaymentOrders()": {
            "notice": "Collects outstanding payment orders."
          },
          "getBountyInformation(uint256)": {
            "notice": "Returns the Bounty instance with id `id`."
          },
          "getClaimInformation(uint256)": {
            "notice": "Returns the Claim instance with id `id`."
          },
          "isExistingBountyId(uint256)": {
            "notice": "Returns whether Bounty with id `id` exists."
          },
          "isExistingClaimId(uint256)": {
            "notice": "Returns whether Claim with id `id` exists."
          },
          "listBountyIds()": {
            "notice": "Returns total list of Bounty ids."
          },
          "listClaimIds()": {
            "notice": "Returns total list of Claim ids."
          },
          "listClaimIdsForContributorAddress(address)": {
            "notice": "Returns a list of Claim ids in which contributor Address is used."
          },
          "lockBounty(uint256)": {
            "notice": "Locks the Bounty so it cant be claimed."
          },
          "outstandingTokenAmount()": {
            "notice": "Returns the total outstanding token payment amount."
          },
          "paymentOrders()": {
            "notice": "Returns the list of outstanding payment orders."
          },
          "updateBounty(uint256,bytes)": {
            "notice": "Updates a Bounty's informations."
          },
          "updateClaimContributors(uint256,(address,uint256)[])": {
            "notice": "Updates a Claim's contributor informations."
          },
          "updateClaimDetails(uint256,bytes)": {
            "notice": "Updates a Claim Details."
          },
          "verifyClaim(uint256,(address,uint256)[])": {
            "notice": "Completes a Bounty by verifying a claim."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ds/=lib/multicall/lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/multicall/lib/forge-std/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "multicall/=lib/multicall/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 5000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/logicModule/IBountyManager.sol": "IBountyManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "src/modules/logicModule/IBountyManager.sol": {
        "keccak256": "0xccd2d66d4dfd5ffdd71a7f4207bdb4b77fbf9f9244ae74cb8c13d2a8d1afae45",
        "urls": [
          "bzz-raw://92d1780eba91f2eba85cd6d7e05ef635b691bc0fe82b3a92a463f7aa925b847a",
          "dweb:/ipfs/QmX13JUMdwUaVoNgPnCyVPH1ZFy6rh5brHPoj2MVbtxakC"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/paymentClient/IERC20PaymentClient.sol": {
        "keccak256": "0x6fd937b4c982db398caf408c94782cbfba9af8861404f7473b07439f526a49a2",
        "urls": [
          "bzz-raw://93c753a744ddef29e99c9775f19a87251aad644b8809c0a7d9d4070e682a708f",
          "dweb:/ipfs/QmTgTC8XV3BSy7yED9HGUDDfQpCYENPTn2d16GTkSRsk7G"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/paymentProcessor/IPaymentProcessor.sol": {
        "keccak256": "0x03db27327e16d429f3e906b604de641e126313e07704fddbd2bc39035b0b23a1",
        "urls": [
          "bzz-raw://b620ed08ea5973c00e897f5e2d8cb9dfe2851f80cf37d7e4e0a7963091f6cdba",
          "dweb:/ipfs/Qmcw1c1qrd7KpHWRSiSLyiDkKx4x8cRZfvtcYU962DHLFH"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/logicModule/IBountyManager.sol",
    "id": 50146,
    "exportedSymbols": {
      "IBountyManager": [
        50145
      ],
      "IERC20PaymentClient": [
        51388
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:10403:109",
    "nodes": [
      {
        "id": 49890,
        "nodeType": "PragmaDirective",
        "src": "42:23:109",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 49892,
        "nodeType": "ImportDirective",
        "src": "67:102:109",
        "nodes": [],
        "absolutePath": "src/modules/logicModule/paymentClient/IERC20PaymentClient.sol",
        "file": "src/modules/logicModule/paymentClient/IERC20PaymentClient.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50146,
        "sourceUnit": 51389,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49891,
              "name": "IERC20PaymentClient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51388,
              "src": "75:19:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50145,
        "nodeType": "ContractDefinition",
        "src": "273:10171:109",
        "nodes": [
          {
            "id": 49908,
            "nodeType": "StructDefinition",
            "src": "422:495:109",
            "nodes": [],
            "canonicalName": "IBountyManager.Bounty",
            "members": [
              {
                "constant": false,
                "id": 49898,
                "mutability": "mutable",
                "name": "minimumPayoutAmount",
                "nameLocation": "545:19:109",
                "nodeType": "VariableDeclaration",
                "scope": 49908,
                "src": "540:24:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 49897,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "540:4:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49901,
                "mutability": "mutable",
                "name": "maximumPayoutAmount",
                "nameLocation": "673:19:109",
                "nodeType": "VariableDeclaration",
                "scope": 49908,
                "src": "668:24:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 49900,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "668:4:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49904,
                "mutability": "mutable",
                "name": "details",
                "nameLocation": "809:7:109",
                "nodeType": "VariableDeclaration",
                "scope": 49908,
                "src": "803:13:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 49903,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "803:5:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49907,
                "mutability": "mutable",
                "name": "locked",
                "nameLocation": "904:6:109",
                "nodeType": "VariableDeclaration",
                "scope": 49908,
                "src": "899:11:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 49906,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "899:4:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Bounty",
            "nameLocation": "429:6:109",
            "scope": 50145,
            "visibility": "public"
          },
          {
            "id": 49915,
            "nodeType": "StructDefinition",
            "src": "923:201:109",
            "nodes": [],
            "canonicalName": "IBountyManager.Contributor",
            "members": [
              {
                "constant": false,
                "id": 49911,
                "mutability": "mutable",
                "name": "addr",
                "nameLocation": "1004:4:109",
                "nodeType": "VariableDeclaration",
                "scope": 49915,
                "src": "996:12:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 49910,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "996:7:109",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49914,
                "mutability": "mutable",
                "name": "claimAmount",
                "nameLocation": "1106:11:109",
                "nodeType": "VariableDeclaration",
                "scope": 49915,
                "src": "1101:16:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 49913,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1101:4:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Contributor",
            "nameLocation": "930:11:109",
            "scope": 50145,
            "visibility": "public"
          },
          {
            "id": 49929,
            "nodeType": "StructDefinition",
            "src": "1130:363:109",
            "nodes": [],
            "canonicalName": "IBountyManager.Claim",
            "members": [
              {
                "constant": false,
                "id": 49917,
                "mutability": "mutable",
                "name": "bountyId",
                "nameLocation": "1158:8:109",
                "nodeType": "VariableDeclaration",
                "scope": 49929,
                "src": "1153:13:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 49916,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1153:4:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49922,
                "mutability": "mutable",
                "name": "contributors",
                "nameLocation": "1272:12:109",
                "nodeType": "VariableDeclaration",
                "scope": 49929,
                "src": "1258:26:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Contributor_$49915_storage_$dyn_storage_ptr",
                  "typeString": "struct IBountyManager.Contributor[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 49920,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49919,
                      "name": "Contributor",
                      "nameLocations": [
                        "1258:11:109"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49915,
                      "src": "1258:11:109"
                    },
                    "referencedDeclaration": 49915,
                    "src": "1258:11:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Contributor_$49915_storage_ptr",
                      "typeString": "struct IBountyManager.Contributor"
                    }
                  },
                  "id": 49921,
                  "nodeType": "ArrayTypeName",
                  "src": "1258:13:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Contributor_$49915_storage_$dyn_storage_ptr",
                    "typeString": "struct IBountyManager.Contributor[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49925,
                "mutability": "mutable",
                "name": "details",
                "nameLocation": "1400:7:109",
                "nodeType": "VariableDeclaration",
                "scope": 49929,
                "src": "1394:13:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 49924,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1394:5:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49928,
                "mutability": "mutable",
                "name": "claimed",
                "nameLocation": "1479:7:109",
                "nodeType": "VariableDeclaration",
                "scope": 49929,
                "src": "1474:12:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 49927,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1474:4:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nameLocation": "1137:5:109",
            "scope": 50145,
            "visibility": "public"
          },
          {
            "id": 49932,
            "nodeType": "ErrorDefinition",
            "src": "1691:52:109",
            "nodes": [],
            "documentation": {
              "id": 49930,
              "nodeType": "StructuredDocumentation",
              "src": "1595:91:109",
              "text": "@notice Access only to addresses that are listed as contributors in the according claim"
            },
            "errorSelector": "0a3b4740",
            "name": "Module__BountyManager__OnlyClaimContributor",
            "nameLocation": "1697:43:109",
            "parameters": {
              "id": 49931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1740:2:109"
            }
          },
          {
            "id": 49935,
            "nodeType": "ErrorDefinition",
            "src": "1860:52:109",
            "nodes": [],
            "documentation": {
              "id": 49933,
              "nodeType": "StructuredDocumentation",
              "src": "1749:106:109",
              "text": "@notice Given payoutAmounts are either zero or maximumPayoutAmount is smaller than minimumPayoutAmount"
            },
            "errorSelector": "75339e3d",
            "name": "Module__BountyManager__InvalidPayoutAmounts",
            "nameLocation": "1866:43:109",
            "parameters": {
              "id": 49934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1909:2:109"
            }
          },
          {
            "id": 49938,
            "nodeType": "ErrorDefinition",
            "src": "1966:47:109",
            "nodes": [],
            "documentation": {
              "id": 49936,
              "nodeType": "StructuredDocumentation",
              "src": "1918:43:109",
              "text": "@notice Given Bounty id is not existing"
            },
            "errorSelector": "4511bb25",
            "name": "Module__BountyManager__InvalidBountyId",
            "nameLocation": "1972:38:109",
            "parameters": {
              "id": 49937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2010:2:109"
            }
          },
          {
            "id": 49941,
            "nodeType": "ErrorDefinition",
            "src": "2066:46:109",
            "nodes": [],
            "documentation": {
              "id": 49939,
              "nodeType": "StructuredDocumentation",
              "src": "2019:42:109",
              "text": "@notice Given Claim id is not existing"
            },
            "errorSelector": "f76e9aef",
            "name": "Module__BountyManager__InvalidClaimId",
            "nameLocation": "2072:37:109",
            "parameters": {
              "id": 49940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2109:2:109"
            }
          },
          {
            "id": 49944,
            "nodeType": "ErrorDefinition",
            "src": "2167:57:109",
            "nodes": [],
            "documentation": {
              "id": 49942,
              "nodeType": "StructuredDocumentation",
              "src": "2118:44:109",
              "text": "@notice Given Contributors list is empty"
            },
            "errorSelector": "93918c2c",
            "name": "Module__BountyManager__InvalidContributorsLength",
            "nameLocation": "2173:48:109",
            "parameters": {
              "id": 49943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2221:2:109"
            }
          },
          {
            "id": 49947,
            "nodeType": "ErrorDefinition",
            "src": "2289:56:109",
            "nodes": [],
            "documentation": {
              "id": 49945,
              "nodeType": "StructuredDocumentation",
              "src": "2230:54:109",
              "text": "@notice Given claim Amount for contributor is zero"
            },
            "errorSelector": "60638100",
            "name": "Module__BountyManager__InvalidContributorAmount",
            "nameLocation": "2295:47:109",
            "parameters": {
              "id": 49946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2342:2:109"
            }
          },
          {
            "id": 49950,
            "nodeType": "ErrorDefinition",
            "src": "2404:57:109",
            "nodes": [],
            "documentation": {
              "id": 49948,
              "nodeType": "StructuredDocumentation",
              "src": "2351:48:109",
              "text": "@notice Given Contributor address is invalid"
            },
            "errorSelector": "e7ae61ce",
            "name": "Module__BountyManager__InvalidContributorAddress",
            "nameLocation": "2410:48:109",
            "parameters": {
              "id": 49949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2458:2:109"
            }
          },
          {
            "id": 49953,
            "nodeType": "ErrorDefinition",
            "src": "2577:62:109",
            "nodes": [],
            "documentation": {
              "id": 49951,
              "nodeType": "StructuredDocumentation",
              "src": "2467:105:109",
              "text": "@notice Given total claims of contributors exceed or are below the given payout amounts of the bounty"
            },
            "errorSelector": "ae68040f",
            "name": "Module__BountyManager__ClaimExceedsGivenPayoutAmounts",
            "nameLocation": "2583:53:109",
            "parameters": {
              "id": 49952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2636:2:109"
            }
          },
          {
            "id": 49956,
            "nodeType": "ErrorDefinition",
            "src": "2687:44:109",
            "nodes": [],
            "documentation": {
              "id": 49954,
              "nodeType": "StructuredDocumentation",
              "src": "2645:37:109",
              "text": "@notice Given Bounty id is Locked"
            },
            "errorSelector": "630a60dc",
            "name": "Module__BountyManager__BountyLocked",
            "nameLocation": "2693:35:109",
            "parameters": {
              "id": 49955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2728:2:109"
            }
          },
          {
            "id": 49959,
            "nodeType": "ErrorDefinition",
            "src": "2788:46:109",
            "nodes": [],
            "documentation": {
              "id": 49957,
              "nodeType": "StructuredDocumentation",
              "src": "2737:46:109",
              "text": "@notice Given Claim id got already claimed"
            },
            "errorSelector": "d4b93ddf",
            "name": "Module__BountyManager__AlreadyClaimed",
            "nameLocation": "2794:37:109",
            "parameters": {
              "id": 49958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2831:2:109"
            }
          },
          {
            "id": 49962,
            "nodeType": "ErrorDefinition",
            "src": "2984:51:109",
            "nodes": [],
            "documentation": {
              "id": 49960,
              "nodeType": "StructuredDocumentation",
              "src": "2840:139:109",
              "text": "@notice The given Contributors are not the same as in the claim. This might be connected to a tried front run of the given transaction."
            },
            "errorSelector": "545bebd2",
            "name": "Module__BountyManager__ContributorsChanged",
            "nameLocation": "2990:42:109",
            "parameters": {
              "id": 49961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3032:2:109"
            }
          },
          {
            "id": 49973,
            "nodeType": "EventDefinition",
            "src": "3512:146:109",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 49963,
              "nodeType": "StructuredDocumentation",
              "src": "3137:370:109",
              "text": "@notice Event emitted when a new Bounty is added.\n @param bountyId The id of the newly added Bounty.\n @param minimumPayoutAmount The minimum amount of tokens the Bounty will pay out upon being claimed\n @param maximumPayoutAmount The maximum amount of tokens the Bounty will pay out upon being claimed\n @param details The Bounty's details."
            },
            "eventSelector": "16aa89bae6ad0e0b7a94b930e87a8e04b02978ed503e2698b1b6359416e1ac83",
            "name": "BountyAdded",
            "nameLocation": "3518:11:109",
            "parameters": {
              "id": 49972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49965,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bountyId",
                  "nameLocation": "3552:8:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 49973,
                  "src": "3539:21:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49964,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49967,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "minimumPayoutAmount",
                  "nameLocation": "3575:19:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 49973,
                  "src": "3570:24:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49966,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3570:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49969,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maximumPayoutAmount",
                  "nameLocation": "3609:19:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 49973,
                  "src": "3604:24:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49968,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3604:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49971,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "details",
                  "nameLocation": "3644:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 49973,
                  "src": "3638:13:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49970,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3638:5:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3529:128:109"
            }
          },
          {
            "id": 49980,
            "nodeType": "EventDefinition",
            "src": "3820:66:109",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 49974,
              "nodeType": "StructuredDocumentation",
              "src": "3664:151:109",
              "text": "@notice Event emitted when a Bounty got updated.\n @param bountyId The id of the updated Bounty.\n @param details The Bounty's details."
            },
            "eventSelector": "5b748b1bf798d437f4457fa662e95d5b99ba7c5c739e2d6342c7d06c4ad43007",
            "name": "BountyUpdated",
            "nameLocation": "3826:13:109",
            "parameters": {
              "id": 49979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49976,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bountyId",
                  "nameLocation": "3853:8:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 49980,
                  "src": "3840:21:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49975,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3840:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49978,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "details",
                  "nameLocation": "3877:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 49980,
                  "src": "3863:21:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49977,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3863:5:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3839:46:109"
            }
          },
          {
            "id": 49985,
            "nodeType": "EventDefinition",
            "src": "4002:42:109",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 49981,
              "nodeType": "StructuredDocumentation",
              "src": "3892:105:109",
              "text": "@notice Event emitted when a Bounty gets locked.\n @param bountyId The id of the locked Bounty."
            },
            "eventSelector": "a0e18720f77efbbf5292a427112cd5b87106c4dd3e6b27fe1fa001090a508a40",
            "name": "BountyLocked",
            "nameLocation": "4008:12:109",
            "parameters": {
              "id": 49984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49983,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bountyId",
                  "nameLocation": "4034:8:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 49985,
                  "src": "4021:21:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49982,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4021:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4020:23:109"
            }
          },
          {
            "id": 49998,
            "nodeType": "EventDefinition",
            "src": "4341:151:109",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 49986,
              "nodeType": "StructuredDocumentation",
              "src": "4050:286:109",
              "text": "@notice Event emitted when a new Claim is added.\n @param claimId The id of the newly added Claim.\n @param bountyId The id of the Bounty that got claimed.\n @param contributors The contributor information for the Claim.\n @param details The Claim's details."
            },
            "eventSelector": "23ea023b108a98377fb5440ffbb7fe7a5c3827c821ef0e16fbd60af8b93cddac",
            "name": "ClaimAdded",
            "nameLocation": "4347:10:109",
            "parameters": {
              "id": 49997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49988,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "4380:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 49998,
                  "src": "4367:20:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49987,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4367:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49990,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bountyId",
                  "nameLocation": "4410:8:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 49998,
                  "src": "4397:21:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49989,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4397:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49994,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contributors",
                  "nameLocation": "4450:12:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 49998,
                  "src": "4428:34:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Contributor_$49915_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IBountyManager.Contributor[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49992,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 49991,
                        "name": "Contributor",
                        "nameLocations": [
                          "4428:11:109"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 49915,
                        "src": "4428:11:109"
                      },
                      "referencedDeclaration": 49915,
                      "src": "4428:11:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contributor_$49915_storage_ptr",
                        "typeString": "struct IBountyManager.Contributor"
                      }
                    },
                    "id": 49993,
                    "nodeType": "ArrayTypeName",
                    "src": "4428:13:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Contributor_$49915_storage_$dyn_storage_ptr",
                      "typeString": "struct IBountyManager.Contributor[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49996,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "details",
                  "nameLocation": "4478:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 49998,
                  "src": "4472:13:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49995,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4472:5:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4357:134:109"
            }
          },
          {
            "id": 50007,
            "nodeType": "EventDefinition",
            "src": "4697:103:109",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 49999,
              "nodeType": "StructuredDocumentation",
              "src": "4498:194:109",
              "text": "@notice Event emitted when Claim Contributors got updated.\n @param claimId The id of the Claim that got updated.\n @param contributors The contributor information for the Claim."
            },
            "eventSelector": "1d41ce0f1e2efe8a516e804c8208a8a92b1931eb13d5c7be8847790b6eb25ec1",
            "name": "ClaimContributorsUpdated",
            "nameLocation": "4703:24:109",
            "parameters": {
              "id": 50006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50001,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "4750:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50007,
                  "src": "4737:20:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50000,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4737:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50005,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contributors",
                  "nameLocation": "4781:12:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50007,
                  "src": "4759:34:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Contributor_$49915_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IBountyManager.Contributor[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50003,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 50002,
                        "name": "Contributor",
                        "nameLocations": [
                          "4759:11:109"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 49915,
                        "src": "4759:11:109"
                      },
                      "referencedDeclaration": 49915,
                      "src": "4759:11:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contributor_$49915_storage_ptr",
                        "typeString": "struct IBountyManager.Contributor"
                      }
                    },
                    "id": 50004,
                    "nodeType": "ArrayTypeName",
                    "src": "4759:13:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Contributor_$49915_storage_$dyn_storage_ptr",
                      "typeString": "struct IBountyManager.Contributor[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4727:72:109"
            }
          },
          {
            "id": 50014,
            "nodeType": "EventDefinition",
            "src": "4973:63:109",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 50008,
              "nodeType": "StructuredDocumentation",
              "src": "4806:162:109",
              "text": "@notice Event emitted when Claim Details got updated.\n @param claimId The id of the Claim that got updated.\n @param details The Claim's details."
            },
            "eventSelector": "4128fe4992a5cb5a9cb54a23107ba2cd9db975f7f66fd5a978927aaf54350a99",
            "name": "ClaimDetailsUpdated",
            "nameLocation": "4979:19:109",
            "parameters": {
              "id": 50013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50010,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "5012:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50014,
                  "src": "4999:20:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50009,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4999:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50012,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "details",
                  "nameLocation": "5027:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50014,
                  "src": "5021:13:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50011,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5021:5:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4998:37:109"
            }
          },
          {
            "id": 50019,
            "nodeType": "EventDefinition",
            "src": "5160:42:109",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 50015,
              "nodeType": "StructuredDocumentation",
              "src": "5042:113:109",
              "text": "@notice Event emitted when a Claim is verified.\n @param claimId The id of the Claim that got verified."
            },
            "eventSelector": "393efda0b92bc01071b66a816d6bcddde867b8c91da505a0f309d9133a53650a",
            "name": "ClaimVerified",
            "nameLocation": "5166:13:109",
            "parameters": {
              "id": 50018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50017,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "5193:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50019,
                  "src": "5180:20:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50016,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5180:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5179:22:109"
            }
          },
          {
            "id": 50028,
            "nodeType": "FunctionDefinition",
            "src": "5633:107:109",
            "nodes": [],
            "documentation": {
              "id": 50020,
              "nodeType": "StructuredDocumentation",
              "src": "5378:250:109",
              "text": "@notice Returns the Bounty instance with id `id`.\n @param bountyId The id of the Bounty to return.\n @return bounty Bounty with id `id`.\n @custom:tags minimumPayoutAmount:decimal maximumPayoutAmount:decimal details:any(string)"
            },
            "functionSelector": "31be580e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getBountyInformation",
            "nameLocation": "5642:20:109",
            "parameters": {
              "id": 50023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50022,
                  "mutability": "mutable",
                  "name": "bountyId",
                  "nameLocation": "5668:8:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50028,
                  "src": "5663:13:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50021,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5663:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5662:15:109"
            },
            "returnParameters": {
              "id": 50027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50026,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50028,
                  "src": "5725:13:109",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Bounty_$49908_memory_ptr",
                    "typeString": "struct IBountyManager.Bounty"
                  },
                  "typeName": {
                    "id": 50025,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50024,
                      "name": "Bounty",
                      "nameLocations": [
                        "5725:6:109"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49908,
                      "src": "5725:6:109"
                    },
                    "referencedDeclaration": 49908,
                    "src": "5725:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bounty_$49908_storage_ptr",
                      "typeString": "struct IBountyManager.Bounty"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5724:15:109"
            },
            "scope": 50145,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50035,
            "nodeType": "FunctionDefinition",
            "src": "5883:63:109",
            "nodes": [],
            "documentation": {
              "id": 50029,
              "nodeType": "StructuredDocumentation",
              "src": "5746:132:109",
              "text": "@notice Returns total list of Bounty ids.\n @dev List is in ascending order.\n @return bountyIds List of Bounty ids."
            },
            "functionSelector": "b5e8bc45",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "listBountyIds",
            "nameLocation": "5892:13:109",
            "parameters": {
              "id": 50030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5905:2:109"
            },
            "returnParameters": {
              "id": 50034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50033,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50035,
                  "src": "5931:13:109",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50031,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "5931:4:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 50032,
                    "nodeType": "ArrayTypeName",
                    "src": "5931:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5930:15:109"
            },
            "scope": 50145,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50043,
            "nodeType": "FunctionDefinition",
            "src": "6153:72:109",
            "nodes": [],
            "documentation": {
              "id": 50036,
              "nodeType": "StructuredDocumentation",
              "src": "5952:196:109",
              "text": "@notice Returns whether Bounty with id `id` exists.\n @param bountyId The id of the Bounty to test.\n @return isExistingBountyId True if Claim with id `id` exists, false otherwise."
            },
            "functionSelector": "be5a5745",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isExistingBountyId",
            "nameLocation": "6162:18:109",
            "parameters": {
              "id": 50039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50038,
                  "mutability": "mutable",
                  "name": "bountyId",
                  "nameLocation": "6186:8:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50043,
                  "src": "6181:13:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50037,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6181:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6180:15:109"
            },
            "returnParameters": {
              "id": 50042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50041,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50043,
                  "src": "6219:4:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50040,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6219:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6218:6:109"
            },
            "scope": 50145,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50052,
            "nodeType": "FunctionDefinition",
            "src": "6445:104:109",
            "nodes": [],
            "documentation": {
              "id": 50044,
              "nodeType": "StructuredDocumentation",
              "src": "6231:209:109",
              "text": "@notice Returns the Claim instance with id `id`.\n @param claimId The id of the Claim to return.\n @return claim Claim with id `id`.\n @custom:tags claimAmount:decimal details:any(string)"
            },
            "functionSelector": "cb05296f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimInformation",
            "nameLocation": "6454:19:109",
            "parameters": {
              "id": 50047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50046,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "6479:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50052,
                  "src": "6474:12:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50045,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6474:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6473:14:109"
            },
            "returnParameters": {
              "id": 50051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50050,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50052,
                  "src": "6535:12:109",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Claim_$49929_memory_ptr",
                    "typeString": "struct IBountyManager.Claim"
                  },
                  "typeName": {
                    "id": 50049,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50048,
                      "name": "Claim",
                      "nameLocations": [
                        "6535:5:109"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49929,
                      "src": "6535:5:109"
                    },
                    "referencedDeclaration": 49929,
                    "src": "6535:5:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$49929_storage_ptr",
                      "typeString": "struct IBountyManager.Claim"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6534:14:109"
            },
            "scope": 50145,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50059,
            "nodeType": "FunctionDefinition",
            "src": "6689:62:109",
            "nodes": [],
            "documentation": {
              "id": 50053,
              "nodeType": "StructuredDocumentation",
              "src": "6555:129:109",
              "text": "@notice Returns total list of Claim ids.\n @dev List is in ascending order.\n @return claimIds List of Claim ids."
            },
            "functionSelector": "3cd6b5d1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "listClaimIds",
            "nameLocation": "6698:12:109",
            "parameters": {
              "id": 50054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6710:2:109"
            },
            "returnParameters": {
              "id": 50058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50057,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50059,
                  "src": "6736:13:109",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50055,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "6736:4:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 50056,
                    "nodeType": "ArrayTypeName",
                    "src": "6736:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6735:15:109"
            },
            "scope": 50145,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50067,
            "nodeType": "FunctionDefinition",
            "src": "6955:70:109",
            "nodes": [],
            "documentation": {
              "id": 50060,
              "nodeType": "StructuredDocumentation",
              "src": "6757:193:109",
              "text": "@notice Returns whether Claim with id `id` exists.\n @param claimId The id of the Bounty to test.\n @return isExistingClaimId True if Claim with id `id` exists, false otherwise."
            },
            "functionSelector": "e2114c8c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isExistingClaimId",
            "nameLocation": "6964:17:109",
            "parameters": {
              "id": 50063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50062,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "6987:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50067,
                  "src": "6982:12:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50061,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6982:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6981:14:109"
            },
            "returnParameters": {
              "id": 50066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50065,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50067,
                  "src": "7019:4:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50064,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7019:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7018:6:109"
            },
            "scope": 50145,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50076,
            "nodeType": "FunctionDefinition",
            "src": "7323:131:109",
            "nodes": [],
            "documentation": {
              "id": 50068,
              "nodeType": "StructuredDocumentation",
              "src": "7031:287:109",
              "text": "@notice Returns a list of Claim ids in which contributor Address is used.\n @dev List is in ascending order.\n @dev Returns an empty .\n @param contributorAddrs claim ids are filtered by the contributor address\n @return contributorClaimIds List of Claim ids."
            },
            "functionSelector": "9c16f525",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "listClaimIdsForContributorAddress",
            "nameLocation": "7332:33:109",
            "parameters": {
              "id": 50071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50070,
                  "mutability": "mutable",
                  "name": "contributorAddrs",
                  "nameLocation": "7374:16:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50076,
                  "src": "7366:24:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7366:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7365:26:109"
            },
            "returnParameters": {
              "id": 50075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50074,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50076,
                  "src": "7439:13:109",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50072,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "7439:4:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 50073,
                    "nodeType": "ArrayTypeName",
                    "src": "7439:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7438:15:109"
            },
            "scope": 50145,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50088,
            "nodeType": "FunctionDefinition",
            "src": "8025:149:109",
            "nodes": [],
            "documentation": {
              "id": 50077,
              "nodeType": "StructuredDocumentation",
              "src": "7535:485:109",
              "text": "@notice Adds a new Bounty.\n @dev Reverts if an argument invalid.\n @param minimumPayoutAmount The minimum amount of tokens the Bounty will pay out upon being claimed\n @param maximumPayoutAmount The maximum amount of tokens the Bounty will pay out upon being claimed\n @param details The Bounty's details.\n @return bountyId The newly added Bounty's id.\n @custom:tags minimumPayoutAmount:decimal maximumPayoutAmount:decimal details:any(string)"
            },
            "functionSelector": "bd769f79",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addBounty",
            "nameLocation": "8034:9:109",
            "parameters": {
              "id": 50084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50079,
                  "mutability": "mutable",
                  "name": "minimumPayoutAmount",
                  "nameLocation": "8058:19:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50088,
                  "src": "8053:24:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50078,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8053:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50081,
                  "mutability": "mutable",
                  "name": "maximumPayoutAmount",
                  "nameLocation": "8092:19:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50088,
                  "src": "8087:24:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50080,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8087:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50083,
                  "mutability": "mutable",
                  "name": "details",
                  "nameLocation": "8136:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50088,
                  "src": "8121:22:109",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50082,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8121:5:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8043:106:109"
            },
            "returnParameters": {
              "id": 50087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50086,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50088,
                  "src": "8168:4:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50085,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8168:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8167:6:109"
            },
            "scope": 50145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50096,
            "nodeType": "FunctionDefinition",
            "src": "8427:70:109",
            "nodes": [],
            "documentation": {
              "id": 50089,
              "nodeType": "StructuredDocumentation",
              "src": "8180:242:109",
              "text": "@notice Updates a Bounty's informations.\n @dev Reverts if an argument invalid.\n @param bountyId The id of the Bounty that will be updated.\n @param details The Bounty's details.\n @custom:tags details:any(string)"
            },
            "functionSelector": "31de0bdb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateBounty",
            "nameLocation": "8436:12:109",
            "parameters": {
              "id": 50094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50091,
                  "mutability": "mutable",
                  "name": "bountyId",
                  "nameLocation": "8454:8:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50096,
                  "src": "8449:13:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50090,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8449:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50093,
                  "mutability": "mutable",
                  "name": "details",
                  "nameLocation": "8479:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50096,
                  "src": "8464:22:109",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50092,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8464:5:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8448:39:109"
            },
            "returnParameters": {
              "id": 50095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8496:0:109"
            },
            "scope": 50145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50102,
            "nodeType": "FunctionDefinition",
            "src": "8713:44:109",
            "nodes": [],
            "documentation": {
              "id": 50097,
              "nodeType": "StructuredDocumentation",
              "src": "8503:205:109",
              "text": "@notice Locks the Bounty so it cant be claimed.\n @dev Only callable by authorized addresses.\n @dev Reverts if id invalid.\n @param bountyId The id of the Bounty that will be locked."
            },
            "functionSelector": "fa4dbd03",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lockBounty",
            "nameLocation": "8722:10:109",
            "parameters": {
              "id": 50100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50099,
                  "mutability": "mutable",
                  "name": "bountyId",
                  "nameLocation": "8738:8:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50102,
                  "src": "8733:13:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50098,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8733:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8732:15:109"
            },
            "returnParameters": {
              "id": 50101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8756:0:109"
            },
            "scope": 50145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50116,
            "nodeType": "FunctionDefinition",
            "src": "9069:148:109",
            "nodes": [],
            "documentation": {
              "id": 50103,
              "nodeType": "StructuredDocumentation",
              "src": "8763:301:109",
              "text": "@notice Adds a new Claim.\n @dev Reverts if an argument invalid.\n @param contributors The contributor information for the Claim\n @param details The Claim's details.\n @return claimId The newly added Claim's id.\n @custom:tags claimAmount:decimal details:any(string)"
            },
            "functionSelector": "0d97d72c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addClaim",
            "nameLocation": "9078:8:109",
            "parameters": {
              "id": 50112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50105,
                  "mutability": "mutable",
                  "name": "bountyId",
                  "nameLocation": "9101:8:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50116,
                  "src": "9096:13:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50104,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9096:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50109,
                  "mutability": "mutable",
                  "name": "contributors",
                  "nameLocation": "9142:12:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50116,
                  "src": "9119:35:109",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Contributor_$49915_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IBountyManager.Contributor[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50107,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 50106,
                        "name": "Contributor",
                        "nameLocations": [
                          "9119:11:109"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 49915,
                        "src": "9119:11:109"
                      },
                      "referencedDeclaration": 49915,
                      "src": "9119:11:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contributor_$49915_storage_ptr",
                        "typeString": "struct IBountyManager.Contributor"
                      }
                    },
                    "id": 50108,
                    "nodeType": "ArrayTypeName",
                    "src": "9119:13:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Contributor_$49915_storage_$dyn_storage_ptr",
                      "typeString": "struct IBountyManager.Contributor[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50111,
                  "mutability": "mutable",
                  "name": "details",
                  "nameLocation": "9179:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50116,
                  "src": "9164:22:109",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50110,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9164:5:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9086:106:109"
            },
            "returnParameters": {
              "id": 50115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50114,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50116,
                  "src": "9211:4:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50113,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9211:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9210:6:109"
            },
            "scope": 50145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50126,
            "nodeType": "FunctionDefinition",
            "src": "9505:115:109",
            "nodes": [],
            "documentation": {
              "id": 50117,
              "nodeType": "StructuredDocumentation",
              "src": "9223:277:109",
              "text": "@notice Updates a Claim's contributor informations.\n @dev Reverts if an argument invalid.\n @param claimId The id of the Claim that will be updated.\n @param contributors The contributor information for the Claim.\n @custom:tags claimAmount:decimal"
            },
            "functionSelector": "5beaeb8c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateClaimContributors",
            "nameLocation": "9514:23:109",
            "parameters": {
              "id": 50124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50119,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "9552:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50126,
                  "src": "9547:12:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9547:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50123,
                  "mutability": "mutable",
                  "name": "contributors",
                  "nameLocation": "9592:12:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50126,
                  "src": "9569:35:109",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Contributor_$49915_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IBountyManager.Contributor[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50121,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 50120,
                        "name": "Contributor",
                        "nameLocations": [
                          "9569:11:109"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 49915,
                        "src": "9569:11:109"
                      },
                      "referencedDeclaration": 49915,
                      "src": "9569:11:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contributor_$49915_storage_ptr",
                        "typeString": "struct IBountyManager.Contributor"
                      }
                    },
                    "id": 50122,
                    "nodeType": "ArrayTypeName",
                    "src": "9569:13:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Contributor_$49915_storage_$dyn_storage_ptr",
                      "typeString": "struct IBountyManager.Contributor[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9537:73:109"
            },
            "returnParameters": {
              "id": 50125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9619:0:109"
            },
            "scope": 50145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50134,
            "nodeType": "FunctionDefinition",
            "src": "9817:83:109",
            "nodes": [],
            "documentation": {
              "id": 50127,
              "nodeType": "StructuredDocumentation",
              "src": "9626:186:109",
              "text": "@notice Updates a Claim Details.\n @param claimId The id of the Claim that will be updated.\n @param details The Claim's details.\n @custom:tags details:any(string)"
            },
            "functionSelector": "2d54a71c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateClaimDetails",
            "nameLocation": "9826:18:109",
            "parameters": {
              "id": 50132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50129,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "9850:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50134,
                  "src": "9845:12:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9845:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50131,
                  "mutability": "mutable",
                  "name": "details",
                  "nameLocation": "9874:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50134,
                  "src": "9859:22:109",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50130,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9859:5:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9844:38:109"
            },
            "returnParameters": {
              "id": 50133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9899:0:109"
            },
            "scope": 50145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50144,
            "nodeType": "FunctionDefinition",
            "src": "10353:89:109",
            "nodes": [],
            "documentation": {
              "id": 50135,
              "nodeType": "StructuredDocumentation",
              "src": "9906:442:109",
              "text": "@notice Completes a Bounty by verifying a claim.\n @dev Only callable by authorized addresses.\n @dev Reverts if id invalid.\n @dev contributors should be copied out of the given Claim. The parameter is used to prevent front running.\n @param claimId The id of the Claim that wants to claim the Bounty.\n @param contributors The contributor information for the Claim.\n @custom:tags claimAmount:decimal"
            },
            "functionSelector": "bf1f9656",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "verifyClaim",
            "nameLocation": "10362:11:109",
            "parameters": {
              "id": 50142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50137,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "10379:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50144,
                  "src": "10374:12:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50136,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10374:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50141,
                  "mutability": "mutable",
                  "name": "contributors",
                  "nameLocation": "10411:12:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 50144,
                  "src": "10388:35:109",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Contributor_$49915_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IBountyManager.Contributor[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50139,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 50138,
                        "name": "Contributor",
                        "nameLocations": [
                          "10388:11:109"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 49915,
                        "src": "10388:11:109"
                      },
                      "referencedDeclaration": 49915,
                      "src": "10388:11:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contributor_$49915_storage_ptr",
                        "typeString": "struct IBountyManager.Contributor"
                      }
                    },
                    "id": 50140,
                    "nodeType": "ArrayTypeName",
                    "src": "10388:13:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Contributor_$49915_storage_$dyn_storage_ptr",
                      "typeString": "struct IBountyManager.Contributor[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10373:51:109"
            },
            "returnParameters": {
              "id": 50143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10441:0:109"
            },
            "scope": 50145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49894,
              "name": "IERC20PaymentClient",
              "nameLocations": [
                "301:19:109"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 51388,
              "src": "301:19:109"
            },
            "id": 49895,
            "nodeType": "InheritanceSpecifier",
            "src": "301:19:109"
          }
        ],
        "canonicalName": "IBountyManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 49893,
          "nodeType": "StructuredDocumentation",
          "src": "171:102:109",
          "text": "@notice A module for managing bounties\n @custom:version 1.0\n @custom:moduletype logicModule"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          50145,
          51388
        ],
        "name": "IBountyManager",
        "nameLocation": "283:14:109",
        "scope": 50146,
        "usedErrors": [
          49932,
          49935,
          49938,
          49941,
          49944,
          49947,
          49950,
          49953,
          49956,
          49959,
          49962,
          51335,
          51338,
          51341,
          51344,
          51347,
          51350
        ],
        "usedEvents": [
          49973,
          49980,
          49985,
          49998,
          50007,
          50014,
          50019,
          51357
        ]
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 109
}